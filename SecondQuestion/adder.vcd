$date
	Mon Jan 18 18:03:11 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module EightBitAdderTestBench $end
$var wire 8 ! s [7:0] $end
$var wire 1 " overflow $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$scope module eightBitAdder $end
$var wire 8 % a [7:0] $end
$var wire 8 & b [7:0] $end
$var wire 1 ' gnd $end
$var wire 1 " overflow $end
$var wire 1 ( tmp1 $end
$var wire 1 ) tmp2 $end
$var wire 1 * tmp3 $end
$var wire 1 + wire0 $end
$var wire 1 , wire1 $end
$var wire 1 - wire10 $end
$var wire 1 . wire11 $end
$var wire 1 / wire12 $end
$var wire 1 0 wire13 $end
$var wire 1 1 wire14 $end
$var wire 1 2 wire15 $end
$var wire 1 3 wire16 $end
$var wire 1 4 wire17 $end
$var wire 1 5 wire18 $end
$var wire 1 6 wire19 $end
$var wire 1 7 wire2 $end
$var wire 1 8 wire20 $end
$var wire 1 9 wire21 $end
$var wire 1 : wire22 $end
$var wire 1 ; wire23 $end
$var wire 1 < wire24 $end
$var wire 1 = wire25 $end
$var wire 1 > wire26 $end
$var wire 1 ? wire27 $end
$var wire 1 @ wire28 $end
$var wire 1 A wire29 $end
$var wire 1 B wire3 $end
$var wire 1 C wire30 $end
$var wire 1 D wire31 $end
$var wire 1 E wire32 $end
$var wire 1 F wire4 $end
$var wire 1 G wire5 $end
$var wire 1 H wire6 $end
$var wire 1 I wire7 $end
$var wire 1 J wire8 $end
$var wire 1 K wire9 $end
$var wire 8 L s [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 L
0K
0J
0I
0H
0G
1F
0E
0D
0C
1B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
z+
0*
1)
1(
0'
b1 &
b1 %
b1 $
b1 #
0"
b10 !
$end
#20
1"
1*
0)
b10000000 !
b10000000 L
0F
1@
0B
1?
b1000000 $
b1000000 &
b1000000 #
b1000000 %
#40
1)
b0 !
b0 L
0@
1E
1"
0?
1D
1*
b10000000 $
b10000000 &
b10000000 #
b10000000 %
#60
0"
0*
0)
b11111110 !
b11111110 L
1F
1J
1/
13
18
1<
1@
1B
1I
1.
12
16
1;
1?
b11111111 $
b11111111 &
b11111111 #
b11111111 %
#80
