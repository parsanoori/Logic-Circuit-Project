$date
	Tue Jan 19 02:54:07 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module My_CLA_TestBench $end
$var wire 32 ! s [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$scope module my_CLA $end
$var wire 32 $ a [31:0] $end
$var wire 32 % b [31:0] $end
$var wire 32 & s [31:0] $end
$var wire 33 ' c [32:0] $end
$scope begin genblk1[0] $end
$scope module fullBitAdder $end
$var wire 1 ( cin $end
$var wire 1 ) cout $end
$var wire 1 * in_a $end
$var wire 1 + in_b $end
$var wire 1 , sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fullBitAdder $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 / in_a $end
$var wire 1 0 in_b $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fullBitAdder $end
$var wire 1 2 cin $end
$var wire 1 3 cout $end
$var wire 1 4 in_a $end
$var wire 1 5 in_b $end
$var wire 1 6 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fullBitAdder $end
$var wire 1 7 cin $end
$var wire 1 8 cout $end
$var wire 1 9 in_a $end
$var wire 1 : in_b $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module fullBitAdder $end
$var wire 1 < cin $end
$var wire 1 = cout $end
$var wire 1 > in_a $end
$var wire 1 ? in_b $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module fullBitAdder $end
$var wire 1 A cin $end
$var wire 1 B cout $end
$var wire 1 C in_a $end
$var wire 1 D in_b $end
$var wire 1 E sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module fullBitAdder $end
$var wire 1 F cin $end
$var wire 1 G cout $end
$var wire 1 H in_a $end
$var wire 1 I in_b $end
$var wire 1 J sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module fullBitAdder $end
$var wire 1 K cin $end
$var wire 1 L cout $end
$var wire 1 M in_a $end
$var wire 1 N in_b $end
$var wire 1 O sum $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module fullBitAdder $end
$var wire 1 P cin $end
$var wire 1 Q cout $end
$var wire 1 R in_a $end
$var wire 1 S in_b $end
$var wire 1 T sum $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module fullBitAdder $end
$var wire 1 U cin $end
$var wire 1 V cout $end
$var wire 1 W in_a $end
$var wire 1 X in_b $end
$var wire 1 Y sum $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module fullBitAdder $end
$var wire 1 Z cin $end
$var wire 1 [ cout $end
$var wire 1 \ in_a $end
$var wire 1 ] in_b $end
$var wire 1 ^ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module fullBitAdder $end
$var wire 1 _ cin $end
$var wire 1 ` cout $end
$var wire 1 a in_a $end
$var wire 1 b in_b $end
$var wire 1 c sum $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module fullBitAdder $end
$var wire 1 d cin $end
$var wire 1 e cout $end
$var wire 1 f in_a $end
$var wire 1 g in_b $end
$var wire 1 h sum $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module fullBitAdder $end
$var wire 1 i cin $end
$var wire 1 j cout $end
$var wire 1 k in_a $end
$var wire 1 l in_b $end
$var wire 1 m sum $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module fullBitAdder $end
$var wire 1 n cin $end
$var wire 1 o cout $end
$var wire 1 p in_a $end
$var wire 1 q in_b $end
$var wire 1 r sum $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module fullBitAdder $end
$var wire 1 s cin $end
$var wire 1 t cout $end
$var wire 1 u in_a $end
$var wire 1 v in_b $end
$var wire 1 w sum $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module fullBitAdder $end
$var wire 1 x cin $end
$var wire 1 y cout $end
$var wire 1 z in_a $end
$var wire 1 { in_b $end
$var wire 1 | sum $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$scope module fullBitAdder $end
$var wire 1 } cin $end
$var wire 1 ~ cout $end
$var wire 1 !" in_a $end
$var wire 1 "" in_b $end
$var wire 1 #" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$scope module fullBitAdder $end
$var wire 1 $" cin $end
$var wire 1 %" cout $end
$var wire 1 &" in_a $end
$var wire 1 '" in_b $end
$var wire 1 (" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$scope module fullBitAdder $end
$var wire 1 )" cin $end
$var wire 1 *" cout $end
$var wire 1 +" in_a $end
$var wire 1 ," in_b $end
$var wire 1 -" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$scope module fullBitAdder $end
$var wire 1 ." cin $end
$var wire 1 /" cout $end
$var wire 1 0" in_a $end
$var wire 1 1" in_b $end
$var wire 1 2" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$scope module fullBitAdder $end
$var wire 1 3" cin $end
$var wire 1 4" cout $end
$var wire 1 5" in_a $end
$var wire 1 6" in_b $end
$var wire 1 7" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$scope module fullBitAdder $end
$var wire 1 8" cin $end
$var wire 1 9" cout $end
$var wire 1 :" in_a $end
$var wire 1 ;" in_b $end
$var wire 1 <" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$scope module fullBitAdder $end
$var wire 1 =" cin $end
$var wire 1 >" cout $end
$var wire 1 ?" in_a $end
$var wire 1 @" in_b $end
$var wire 1 A" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$scope module fullBitAdder $end
$var wire 1 B" cin $end
$var wire 1 C" cout $end
$var wire 1 D" in_a $end
$var wire 1 E" in_b $end
$var wire 1 F" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$scope module fullBitAdder $end
$var wire 1 G" cin $end
$var wire 1 H" cout $end
$var wire 1 I" in_a $end
$var wire 1 J" in_b $end
$var wire 1 K" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$scope module fullBitAdder $end
$var wire 1 L" cin $end
$var wire 1 M" cout $end
$var wire 1 N" in_a $end
$var wire 1 O" in_b $end
$var wire 1 P" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$scope module fullBitAdder $end
$var wire 1 Q" cin $end
$var wire 1 R" cout $end
$var wire 1 S" in_a $end
$var wire 1 T" in_b $end
$var wire 1 U" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$scope module fullBitAdder $end
$var wire 1 V" cin $end
$var wire 1 W" cout $end
$var wire 1 X" in_a $end
$var wire 1 Y" in_b $end
$var wire 1 Z" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$scope module fullBitAdder $end
$var wire 1 [" cin $end
$var wire 1 \" cout $end
$var wire 1 ]" in_a $end
$var wire 1 ^" in_b $end
$var wire 1 _" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$scope module fullBitAdder $end
$var wire 1 `" cin $end
$var wire 1 a" cout $end
$var wire 1 b" in_a $end
$var wire 1 c" in_b $end
$var wire 1 d" sum $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$scope module fullBitAdder $end
$var wire 1 e" cin $end
$var wire 1 f" cout $end
$var wire 1 g" in_a $end
$var wire 1 h" in_b $end
$var wire 1 i" sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
1P"
0O"
0N"
0M"
1L"
1K"
1J"
1I"
1H"
1G"
1F"
1E"
1D"
1C"
1B"
0A"
0@"
1?"
1>"
1="
0<"
0;"
1:"
19"
18"
07"
16"
15"
14"
03"
02"
01"
00"
0/"
0."
1-"
0,"
1+"
0*"
0)"
1("
0'"
0&"
0%"
1$"
1#"
1""
1!"
1~
1}
0|
1{
1z
1y
0x
1w
0v
0u
0t
1s
0r
1q
1p
1o
0n
0m
0l
0k
0j
0i
1h
0g
0f
0e
1d
1c
1b
1a
1`
1_
0^
1]
0\
1[
1Z
0Y
1X
0W
1V
1U
0T
1S
1R
1Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
1E
0D
1C
0B
0A
1@
0?
1>
0=
0<
1;
0:
19
08
07
16
05
04
03
12
01
10
1/
1.
0-
1,
1+
0*
0)
0(
b111110001101001111000000100 '
b111000011101001100000111101 &
b11001000110100111100000011 %
b11111010110100100100111010 $
b11001000110100111100000011 #
b11111010110100100100111010 "
b111000011101001100000111101 !
$end
#20
1c
1_
1[
1J
0^
1F
1P
1Z
1B
0|
1L
1V
0F"
0E
0x
0Y
0h
0)"
0="
0B"
0K"
0P"
1A
0s
0t
08"
1K
1U
0d
0$"
0%"
09"
0>"
0G"
0L"
0@
1=
0O
1r
0o
1w
17"
04"
1G
0T
1Q
0`
0~
1("
0-"
0<"
b1001101100100001001101 !
b1001101100100001001101 &
0A"
0C"
b100000111111100100 '
0H"
1?
1I
1N
0X
0]
0b
0q
1v
0""
06"
0E"
0J"
1H
0R
1W
1\
0a
0!"
1&"
0+"
0:"
0?"
0D"
0I"
b11000000111010011 #
b11000000111010011 %
b1001010100011001111010 "
b1001010100011001111010 $
#40
1J
1F
1B
0c
06
0E
0Z
0_
0#"
02
1<
1A
0V
0[
0}
11
0.
0;
18
0@
1=
0w
1Y
0^
0r
b1111110000 '
0y
0("
b1001000011 !
b1001000011 &
07"
0+
00
1:
0?
0v
0{
1*
0W
0\
0p
0z
0&"
05"
b111001000 #
b111001000 %
b1111011 "
b1111011 $
#60
